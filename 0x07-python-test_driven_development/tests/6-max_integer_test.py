#!/usr/bin/python3
"""Unittest for max_integer([..])
"""
import unittest
max_integer = __import__('6-max_integer').max_integer


class TestMaxInteger(unittest.TestCase):
    """Unittest for max_integer([..])"""
    def test_m_s(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([9, 8, 7, 6]), 9)

    def test_ord(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([10, 20, 30, 40]), 40)

    def test_ord_la(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([2, 4, 6, 8, 10, 12, 14, 16, 18, 20]), 20)

    def test_u(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([3, 5, 6, 4]), 6)

    def test_u_la(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([5, 72, 110, 33, 987, 76, 84,
                                     120, 300, 600]), 987)

    def test_without_argument(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer(), None)

    def test_empty_l(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([]), None)

    def test_one_argument(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([98]), 98)

    def test_il(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([1, 1, 1, 1]), 1)

    def test_p_n(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(
            max_integer([-50, 75, 120, 45, -900, 100, 85, 95, -200, -400]),
            120)

    def test_n(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(
            max_integer(
                [-6105619, -854849, -562553, -3088955, -6711290, -4817844,
                    -1907189, -8110534, -6601769, -5837524, -4726702,
                    -8433749, -7251403, -5117635, -2979207, -1335257,
                    -6867266, -9073637, -6224732, -1080801, -1080228,
                    -6801278, -8351954, -1736432, -746131, -4376995,
                    -967891, -4663691, -71562, -7153670, -8038202,
                    -7893047, -9350883, -1132134, -3675971, -8495354,
                    -9158229, -9310087, -6319598, -8961209, -4906000,
                    -386471, -639929, -2676965, -6881679, -6258057,
                    -5490677, -1107298, -4199148, -5933601, -9917695,
                    -7759849, -7045734, -4885806, -9485075, -5119579,
                    -4147063, -7622811, -4671971, -5439539, -840414,
                    -3671742, -4400074, -3549343, -9146070, -6071672,
                    -7213213, -1307446, -3936098, -2415520, -9162654,
                    -6129976, -5791439, -3481890, -7828832, -6954726,
                    -5272933, -4952516, -6115545, -8333464, -7271456,
                    -4097027, -4342575, -8400559, -8235052, -4373818,
                    -8054214, -8565596, -639225, -2292452, -4269529,
                    -7202853, -6891036, -4379807, -7955196, -1536591,
                    -2839083, -2586661, -9941097, -3136620]), -71562)

    def test_i_f(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(
            max_integer(
                [10, 99.8, -100, -0.1, 1000, 9999, -100000, 9998.9]), 9999)

    def test_m_l(self):
        """Unittest for max_integer([..])"""
        with self.assertRaises(TypeError):
            max_integer([[], [6], [8], [6, 9], 97, "fun"])

    def test_m_l_i_s(self):
        """Unittest for max_integer([..])"""
        with self.assertRaises(TypeError):
            max_integer([97, "fun"])

    def test_None_me(self):
        """Unittest for max_integer([..])"""
        with self.assertRaises(TypeError):
            max_integer(None)

    def test_d(self):
        """Unittest for max_integer([..])"""
        with self.assertRaises(TypeError):
            max_integer([{20: 23, 14: 45}, {"a": "b"}])

    def test_i(self):
        """Unittest for max_integer([..])"""
        with self.assertRaises(TypeError):
            max_integer(99)

    def test_f(self):
        """Unittest for max_integer([..])"""
        with self.assertRaises(TypeError):
            max_integer(1.2)

    def test_i_f_la(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(
            max_integer(
                [199872.7619047619, 115249.8813559322, 37972.944444444445,
                    120549.90322580645, 30889.777777777777, 986136.4,
                    393382.5416666667, 15441.826086956522, 2503567,
                    176118.87179487178, 372359.4, 142747.61538461538,
                    383318.8181818182, 297732.2727272727, 104980.52702702703,
                    98409.27272727272, 617459.875, 56556.62162162162, 61958.8,
                    115000.59090909091, 240958.45714285714,
                    101071.85714285714, 77616.47692307692, 89029.64,
                    104941.96666666666, 31940.53846153846, 106652.10126582278,
                    686700.1538461539, 52758.709677419356, 348259.4285714286,
                    89457.28947368421, 58039.52702702703, 306427.53571428574,
                    64379.01176470588, 557699.5333333333, 18718.639344262294,
                    364967.55555555556, 129951.23404255319, 41683.82692307692,
                    139149.9818181818, 356782.86666666664, 100259.07692307692,
                    245204.75, 78972.5306122449, 404825.8888888889, 124364.25,
                    1065047.5, 42946.45614035088, 73670.8813559322,
                    83546.51351351352, 323098.3333333333, 88578.35294117648,
                    89471.0, 47745.197916666664, 17102.676767676767,
                    127735.80882352941, 110513.05882352941,
                    62214.055555555555, 6968.981481481482, 40691.34693877551,
                    69931.09677419355, 67024.44186046511, 112123.04,
                    1167186.0, 140392.05, 15814.362637362638,
                    88923.34444444445, 114726.20731707317, 143303.55,
                    38233.83516483517, 94065.72857142857, 42789.892857142855,
                    44182.47169811321, 41313.101265822785, 67705.18965517242,
                    1222423.5, 44966.55405405405, 37153.6, 82085.08,
                    559793.2857142857, 30031.58823529412, 126947.4262295082,
                    309222.3125, 125132.82089552238, 37276.27397260274,
                    99726.62903225806, 4270.788235294118, 490468.4375,
                    54086.642857142855, 73068.5, 108526.5081967213, 52943.875,
                    128534.875, 61069.433333333334, 37142.71951219512,
                    51481.13114754098, 571618.5, 35977.166666666664,
                    142333.11764705883, 199123.75]), 2503567)

    def test_f(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(
            max_integer(
                [0.123, 0.857568, 0.345, 0.234234, 0.95675674, 0.678678,
                    0.967090, 0.84653, 0.7545375]), 0.967090)

    def test_f_la(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(
            max_integer(
                [199872.7619047619, 115249.8813559322, 37972.944444444445,
                    120549.90322580645, 30889.777777777777, 986136.4,
                    393382.5416666667, 15441.826086956522, 2503567,
                    176118.87179487178, 372359.4, 142747.61538461538,
                    383318.8181818182, 297732.2727272727, 104980.52702702703,
                    98409.27272727272, 617459.875, 56556.62162162162, 61958.8,
                    115000.59090909091, 240958.45714285714,
                    101071.85714285714, 77616.47692307692, 89029.64,
                    104941.96666666666, 31940.53846153846, 106652.10126582278,
                    686700.1538461539, 52758.709677419356, 348259.4285714286,
                    89457.28947368421, 58039.52702702703, 306427.53571428574,
                    64379.01176470588, 557699.5333333333, 18718.639344262294,
                    364967.55555555556, 129951.23404255319, 41683.82692307692,
                    139149.9818181818, 356782.86666666664, 100259.07692307692,
                    245204.75, 78972.5306122449, 404825.8888888889, 124364.25,
                    1065047.5, 42946.45614035088, 73670.8813559322,
                    83546.51351351352, 323098.3333333333, 88578.35294117648,
                    89471.0, 47745.197916666664, 17102.676767676767,
                    127735.80882352941, 110513.05882352941,
                    62214.055555555555, 6968.981481481482, 40691.34693877551,
                    69931.09677419355, 67024.44186046511, 112123.04,
                    1167186.0, 140392.05, 15814.362637362638,
                    88923.34444444445, 114726.20731707317, 143303.55,
                    38233.83516483517, 94065.72857142857, 42789.892857142855,
                    44182.47169811321, 41313.101265822785, 67705.18965517242,
                    1222423.5, 44966.55405405405, 37153.6, 82085.08,
                    559793.2857142857, 30031.58823529412, 126947.4262295082,
                    309222.3125, 125132.82089552238, 37276.27397260274,
                    99726.62903225806, 4270.788235294118, 490468.4375,
                    54086.642857142855, 73068.5, 108526.5081967213, 52943.875,
                    128534.875, 61069.433333333334, 37142.71951219512,
                    51481.13114754098, 571618.5, 35977.166666666664,
                    142333.11764705883, 199123.75]), 2503567)

    def test_num_str(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer("567890123"), "9")

    def test_str(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer("Python"), "y")

    def test_l(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([[], [1], [6], [2, 9]]), [6])

    def test_str_l(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(
            max_integer([["apple"], ["banana"], ["cherry"],
                        ["strawberry"], ["raspberry"]]), ["strawberry"])

    def test_inf_me(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([90, float('inf'), float('-inf')]),
                         float('inf'))

    def test_NaN_me(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(max_integer([100, float('nan'), 42]), 100)

    def test_p_n_la(self):
        """Unittest for max_integer([..])"""
        self.assertEqual(
            max_integer(
                [-5000, 8000, -7000, 3000, 5000, -1000, -9000, -6000,
                    7000, -1500, 6000, 2000, 100, 7000, -5000, 8000, -7000,
                    -6000, 700, -8000, 9000, -1000, 4000, -1000, 8000,
                    -8000, 9000, 1500, -4000, -2000, -7000, 2000, -7000,
                    -1000, -500, 9000, 9500, -2000, -9000, 4000, 3000, -6000,
                    -8000, 3000, 1000, 4000, 8000, 2000, -1000, 5000, 4000,
                    7000, 500, 3000, -8000, -1500, 2000, -4000, -2000,
                    -7000, -500, 9800, 4000, -7000, 300, 1000, -1000, -9900,
                    30, 3500, 1100, 7000, 5000, -9000, -6000, -10000, -2500,
                    -4000, 6000, 5500, -2000, -5000, -4000, 7000, -9000,
                    -9000, 8500, 3500, 3000, 8000, 210, -3000, 6000, -5500,
                    900, -3500, -2500, -3300, 7000, 9600]), 9800)


if __name__ == '__main__':
    unittest.main()
