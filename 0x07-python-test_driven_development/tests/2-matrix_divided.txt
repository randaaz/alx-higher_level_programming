The ``2-matrix_divided`` module
============================

Using ``matrix_divided``
---------------------

Import module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Test with a standard matrix:
    >>> matrix_divided([[6, 9, 12], [3, 6, 9]], 3)
    [[2.0, 3.0, 4.0], [1.0, 2.0, 3.0]]

Test division by infinity:
    >>> matrix_divided([[6, 9, 12], [3, 6, 9]], float('inf'))
    [[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
    
Test division by NaN:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], float('nan'))
    [[nan, nan, nan], [nan, nan, nan]]
    
Test with one element matrix:
    >>> matrix_divided([[10]], 5)
    [[2.0]]

Test with an unmodified original matrix:
    >>> m = [[6, 9, 12], [3, 6, 9]]
    >>> matrix_divided(m, 3)
    [[2.0, 3.0, 4.0], [1.0, 2.0, 3.0]]
    >>> m[1][1]
    6

Test division by a negative number:
    >>> matrix_divided([[6, 9, 12], [3, 6, 9]], -2)
    [[-3.0, -4.5, -6.0], [-1.5, -3.0, -4.5]]

Test with a matrix having different row sizes
    >>> matrix_divided([[6, 9, 12], [3, 9]], 3)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size


Test with an empty matrix with more rows:
    >>> matrix_divided([[], [], []], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test division by a non-number:
    >>> matrix_divided([[6]], "bar")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Test division by zero:
    >>> matrix_divided([[6, 9, 12], [3, 6, 9]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test with the first argument as None:
    >>> matrix_divided(none, 2)
    Traceback (most recent call last):
    ...
    NameError: name 'none' is not defined

Test with an empty matrix:
    >>> matrix_divided([[]], 5)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
    
    Test with the first argument as an empty list:
    >>> matrix_divided([], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test missing one argument:
    >>> matrix_divided()
    Traceback (most recent call last):
    ...
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Test with a matrix containing a non-number
    >>> matrix_divided([[6, 9, 12], [3, "hello", 9]], 3)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats


Test with the first argument as a string:
    >>> matrix_divided("hello", 1)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

